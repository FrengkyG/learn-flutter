// Mocks generated by Mockito 5.2.0 from annotations
// in restaurant_app/test/fetch_restaurant_list_test.dart.
// Do not manually edit this file.

import 'dart:async' as _i6;

import 'package:mockito/mockito.dart' as _i1;
import 'package:restaurant_app/data/api/api_service.dart' as _i5;
import 'package:restaurant_app/data/models/restaurant_detail.dart' as _i3;
import 'package:restaurant_app/data/models/restaurant_list.dart' as _i2;
import 'package:restaurant_app/data/models/search_result.dart' as _i4;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types

class _FakeRestaurantList_0 extends _i1.Fake implements _i2.RestaurantList {}

class _FakeRestaurantDetail_1 extends _i1.Fake implements _i3.RestaurantDetail {
}

class _FakeSearchResult_2 extends _i1.Fake implements _i4.SearchResult {}

/// A class which mocks [ApiService].
///
/// See the documentation for Mockito's code generation for more information.
class MockApiService extends _i1.Mock implements _i5.ApiService {
  MockApiService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i6.Future<_i2.RestaurantList> list() =>
      (super.noSuchMethod(Invocation.method(#list, []),
              returnValue:
                  Future<_i2.RestaurantList>.value(_FakeRestaurantList_0()))
          as _i6.Future<_i2.RestaurantList>);
  @override
  _i6.Future<_i3.RestaurantDetail> detail(String? id) =>
      (super.noSuchMethod(Invocation.method(#detail, [id]),
              returnValue:
                  Future<_i3.RestaurantDetail>.value(_FakeRestaurantDetail_1()))
          as _i6.Future<_i3.RestaurantDetail>);
  @override
  _i6.Future<_i4.SearchResult> search(String? query) => (super.noSuchMethod(
          Invocation.method(#search, [query]),
          returnValue: Future<_i4.SearchResult>.value(_FakeSearchResult_2()))
      as _i6.Future<_i4.SearchResult>);
}
